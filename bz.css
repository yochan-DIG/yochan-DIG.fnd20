body {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
} /* Flexboxレイアウト設定 */

h1 {
    color: red;
    font-size: 50pt;
}

.rule {
    font-size: 30pt;
    margin-bottom: 550px;
}

.display {
    display: flex;
    align-items: center;
    font-size: 20pt;
    margin-bottom: 10px;
}

.inline {
    flex: 1;
}

#counter {
    margin-right: 200px;
    width: 250px;
    border: 3px solid black;    
}

#start {
    margin-right: 200px;
    font-size: 20pt;
    font-weight: bold;
}

#timer {
    display: flex;
    align-items: center;
}

#timer p {
    margin-right: 30px;
}








/* 

【要素タグ指定】
body{
    font-size: 200%;
}

※div、h1、p など
※body h1{} とすると、body 且つ h1 の指定となる
※body, h1{} とすると、body と h1 全て指定となる


【クラス指定】
.animal{
    color: red;
}

※.animal, .sea{} とすると、両方を全て指定となる


【id指定】
#eats{
    background-color: yellow;
}


【styleプロパティ集】
div{
    font-size: ?数値?%;　フォントサイズ ?数値?pt でも可
    color: ?色?;　テキストの色
    background-color: ?色?;　テキストの背景色
    background: ?色?;　ブロックの色
    font-weight: bold;　boldとすると太字になる
    width: ???px;　幅
    height: ???px;　高さ
    text-align: center;　テキスト位置真ん中/left,right
}


【layoutプロパティ集】
div{
    padding: ?数値?px;　文字とその箱の端とのギャップ
    padding-left: ?数値?px;　文字とその箱の端とのギャップ（左からの）
    padding-right: ?数値?px;　文字とその箱の端とのギャップ（右からの）
    border: ?数値?px ?色?;　箱の境界線。幅と色が設定できる
    margin: ?数値?px;　箱の外側の余白部分
}


◆Flow レイアウト
　デフォルト設定
.class{
    display: inline;　指定した要素を横に並べる
    display: block;　指定した要素を＊＊＊
    inline-block: ???;　高さと幅が指定できる、padding、marginも設定可
}


◆Float レイアウト
　デフォルトflowから外れ、この要素が最初から無かったかのように次の要素が配置される
.class{
    float: right;　右に寄って、次の要素は回り込んで重ならないようズレる　right/left/none
}

※次のp要素の文章が、他の要素と重なって欲しくない時
p{
    clear: right;　他には、left,　both
}



◆Positioned レイアウト：relative
　デフォルトのflowの位置から指定された距離だけズラす
.class{
    position: relative;
    top: ??px;　top/bottom 上からか、下からか
    left: ??px;　right/left 右からか、左からか
}


◆Positioned レイアウト：absolute
　デフォルトflowから外れ、最も近い親要素から指定された距離だけズラす
.class{
    position: absolute;
    top: ??px;　top/bottom 上からか、下からか
    left: ??px;　right/left 右からか、左からか
}


◆Positioned レイアウト：fixed
　windowに対し指定の位置に固定する（スクロールしても動かない）
.class{
    position: fixed;
    top: ??px;　top/bottom 上からか、下からか
    left: ??px;　right/left 右からか、左からか
}


◆Positioned レイアウト：sticky
　スクロールしてwindowの端にくるとfixedになり固定する
.class{
    position: sticky;
    top: ??px;　top/bottom 上からか、下からか
    left: ??px;　right/left 右からか、左からか
}


◆Flexbox レイアウト：
　スクロールしてwindowの端にくるとfixedになり固定する
.class{
    display: flex;
    flex-direction: column;　レイアウトの方向（横か縦か）　row/column
    justify-content: space-evenly;　レイアウト方向に沿っての配列　center/flex-start/flex-end/space-around/space-between/space-evenly
    align-items: center;　レイアウト方向に直角　center/flex-start/flex-end/space-around/space-between/stretch
}






















*/